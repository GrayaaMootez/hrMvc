package com.tez.hrMvc.model;
// Generated 2 juin 2018 14:26:26 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Jobs generated by hbm2java
 */
@Entity
@Table(name = "JOBS")
public class Jobs implements java.io.Serializable {

	private String jobId;
	private String jobTitle;
	private Long minSalary;
	private Long maxSalary;
	private Set<Employees> employeeses = new HashSet<Employees>(0);
	private Set<JobHistory> jobHistories = new HashSet<JobHistory>(0);

	public Jobs() {
	}

	@Transient
	public boolean isNew() {
		return (this.getJobId() == null);
	}

	public Jobs(String jobId, String jobTitle) {
		this.jobId = jobId;
		this.jobTitle = jobTitle;
	}

	public Jobs(String jobId, String jobTitle, Long minSalary, Long maxSalary, Set<Employees> employeeses,
			Set<JobHistory> jobHistories) {
		this.jobId = jobId;
		this.jobTitle = jobTitle;
		this.minSalary = minSalary;
		this.maxSalary = maxSalary;
		this.employeeses = employeeses;
		this.jobHistories = jobHistories;
	}

	@Id
	@Column(name = "JOB_ID", unique = true, nullable = false, length = 10)
	public String getJobId() {
		return this.jobId;
	}

	public void setJobId(String jobId) {
		this.jobId = jobId;
	}

	@Column(name = "JOB_TITLE", nullable = false, length = 35)
	public String getJobTitle() {
		return this.jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = jobTitle;
	}

	@Column(name = "MIN_SALARY", precision = 6, scale = 0)
	public Long getMinSalary() {
		return this.minSalary;
	}

	public void setMinSalary(Long minSalary) {
		this.minSalary = minSalary;
	}

	@Column(name = "MAX_SALARY", precision = 6, scale = 0)
	public Long getMaxSalary() {
		return this.maxSalary;
	}

	public void setMaxSalary(Long maxSalary) {
		this.maxSalary = maxSalary;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobs")
	public Set<Employees> getEmployeeses() {
		return this.employeeses;
	}

	public void setEmployeeses(Set<Employees> employeeses) {
		this.employeeses = employeeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobs")
	public Set<JobHistory> getJobHistories() {
		return this.jobHistories;
	}

	public void setJobHistories(Set<JobHistory> jobHistories) {
		this.jobHistories = jobHistories;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((jobId == null) ? 0 : jobId.hashCode());
		result = prime * result + ((jobTitle == null) ? 0 : jobTitle.hashCode());
		result = prime * result + ((maxSalary == null) ? 0 : maxSalary.hashCode());
		result = prime * result + ((minSalary == null) ? 0 : minSalary.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Jobs other = (Jobs) obj;
		if (jobId == null) {
			if (other.jobId != null) {
				return false;
			}
		} else if (!jobId.equals(other.jobId)) {
			return false;
		}
		if (jobTitle == null) {
			if (other.jobTitle != null) {
				return false;
			}
		} else if (!jobTitle.equals(other.jobTitle)) {
			return false;
		}
		if (maxSalary == null) {
			if (other.maxSalary != null) {
				return false;
			}
		} else if (!maxSalary.equals(other.maxSalary)) {
			return false;
		}
		if (minSalary == null) {
			if (other.minSalary != null) {
				return false;
			}
		} else if (!minSalary.equals(other.minSalary)) {
			return false;
		}
		return true;
	}

}
